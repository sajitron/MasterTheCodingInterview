{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["const numbers = [99, 44, 6, 2, 1, 5, 63, 87, 283, 4, 0];\n\nfunction mergeSort(array: number[]) {\n  if (array.length === 1) {\n    return array;\n  }\n\n  // split array into right and left\n  const length = array.length;\n  const middle = Math.floor(length/2);\n  const left = array.slice(0, middle);\n  const right = array.slice(middle);\n\n  return merge(\n    mergeSort(left),\n    mergeSort(right)\n  )\n}\n\nfunction merge(left, right) {\n  const result = [];\n  let leftIndex = 0;\n  let rightIndex = 0;\n  while (leftIndex < left.length && rightIndex < right.length) {\n    if (left[leftIndex] < right[rightIndex]) {\n      result.push(left[leftIndex]);\n      leftIndex++;\n    } else {\n      result.push(right[rightIndex]);\n      rightIndex++;\n    }\n  }\n\n  return result.concat(left.slice(leftIndex)).concat(right.slice(rightIndex));\n}\n\nmergeSort(numbers);\nconsole.log(numbers);"],
  "mappings": ";AAAA,MAAM,UAAU,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,KAAK,GAAG,CAAC;AAEtD,SAAS,UAAU,OAAiB;AAClC,MAAI,MAAM,WAAW,GAAG;AACtB,WAAO;AAAA,EACT;AAGA,QAAM,SAAS,MAAM;AACrB,QAAM,SAAS,KAAK,MAAM,SAAO,CAAC;AAClC,QAAM,OAAO,MAAM,MAAM,GAAG,MAAM;AAClC,QAAM,QAAQ,MAAM,MAAM,MAAM;AAEhC,SAAO;AAAA,IACL,UAAU,IAAI;AAAA,IACd,UAAU,KAAK;AAAA,EACjB;AACF;AAEA,SAAS,MAAM,MAAM,OAAO;AAC1B,QAAM,SAAS,CAAC;AAChB,MAAI,YAAY;AAChB,MAAI,aAAa;AACjB,SAAO,YAAY,KAAK,UAAU,aAAa,MAAM,QAAQ;AAC3D,QAAI,KAAK,aAAa,MAAM,aAAa;AACvC,aAAO,KAAK,KAAK,UAAU;AAC3B;AAAA,IACF,OAAO;AACL,aAAO,KAAK,MAAM,WAAW;AAC7B;AAAA,IACF;AAAA,EACF;AAEA,SAAO,OAAO,OAAO,KAAK,MAAM,SAAS,CAAC,EAAE,OAAO,MAAM,MAAM,UAAU,CAAC;AAC5E;AAEA,UAAU,OAAO;AACjB,QAAQ,IAAI,OAAO;",
  "names": []
}
