{
  "version": 3,
  "sources": ["../linkedList.ts"],
  "sourcesContent": ["class Node {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nconst a = new Node(\"A\");\nconst b = new Node(\"B\");\nconst c = new Node(\"C\");\nconst d = new Node(\"D\");\nconst w = new Node(2);\nconst x = new Node(8);\nconst y = new Node(3);\nconst z = new Node(7);\n\na.next = b;\nb.next = c;\nc.next = d;\n\nw.next = x;\nx.next = y;\ny.next = z;\n\nfunction printList(head) {\n  let current = head;\n  let arrList = [];\n  while (current !== null) {\n    arrList.push(current.value);\n    current = current.next;\n  }\n  return arrList;\n}\n\nfunction printListRecursive(head) {\n  const list = [];\n  fillValues(head, list);\n  return list;\n}\n\nfunction fillValues(head, list) {\n  if (head === null) return;\n  list.push(head.value)\n  fillValues(head.next, list)\n}\n\nfunction sumLinkedList(head) {\n  let sum = 0;\n  let current = head\n  while (current !== null) {\n    sum += current.value;\n    current = current.next;\n  }\n  return sum;\n}\n\nfunction sumLinkedListRecursive(head) {\n  if (head === null) return 0;\n  return head.value + sumLinkedListRecursive(head.next)\n}\n\nfunction findItem(head, target) {\n  let current = head;\n  while (current !== null) {\n    if (current.value === target) return true;\n    current = current.next;\n  }\n  return false;\n}\n\nfunction findItemRecursive(head, target) {\n  if (head === null) return false;\n  if (head.value === target) return true;\n  return findItemRecursive(head.next, target);\n}\n\nfunction getNodeValueRecursive(head, index) {\n  if (head === null) return null;\n  if (index === 0) return head.value;\n  return getNodeValueRecursive(head.next, index - 1);\n}\n\nfunction getNodeValue(head, index) {\n  let current = head;\n  let count = 0;\n  while (current !== null) {\n    if (count === index) return current.value;\n    count += 1;\n    current = current.next;\n  }\n  return null;\n}\n\nfunction reverseLinkedList(head) {\n  let prev = null;\n  let current = head;\n  while(current !== null) {\n    // save the next reference\n    const next = current.next;\n    // set the head.next to null on first iteration\n    // since the head will now become the tail\n    current.next = prev;\n    prev = current;\n    current = next;\n  }\n  return prev;\n}\n\nfunction reverseLinkedListRecursive(head, prev = null) {\n  if (head === null) return prev;\n  const next = head.next;\n  head.next = prev;\n  return reverseLinkedListRecursive(next, head);\n}\n\n// todo: zipper lists\n"],
  "mappings": ";AAAA,MAAM,KAAK;AAAA,EACT,YAAY,OAAO;AACjB,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EACd;AACF;AAEA,MAAM,IAAI,IAAI,KAAK,GAAG;AACtB,MAAM,IAAI,IAAI,KAAK,GAAG;AACtB,MAAM,IAAI,IAAI,KAAK,GAAG;AACtB,MAAM,IAAI,IAAI,KAAK,GAAG;AACtB,MAAM,IAAI,IAAI,KAAK,CAAC;AACpB,MAAM,IAAI,IAAI,KAAK,CAAC;AACpB,MAAM,IAAI,IAAI,KAAK,CAAC;AACpB,MAAM,IAAI,IAAI,KAAK,CAAC;AAEpB,EAAE,OAAO;AACT,EAAE,OAAO;AACT,EAAE,OAAO;AAET,EAAE,OAAO;AACT,EAAE,OAAO;AACT,EAAE,OAAO;AAET,SAAS,UAAU,MAAM;AACvB,MAAI,UAAU;AACd,MAAI,UAAU,CAAC;AACf,SAAO,YAAY,MAAM;AACvB,YAAQ,KAAK,QAAQ,KAAK;AAC1B,cAAU,QAAQ;AAAA,EACpB;AACA,SAAO;AACT;AAEA,SAAS,mBAAmB,MAAM;AAChC,QAAM,OAAO,CAAC;AACd,aAAW,MAAM,IAAI;AACrB,SAAO;AACT;AAEA,SAAS,WAAW,MAAM,MAAM;AAC9B,MAAI,SAAS;AAAM;AACnB,OAAK,KAAK,KAAK,KAAK;AACpB,aAAW,KAAK,MAAM,IAAI;AAC5B;AAEA,SAAS,cAAc,MAAM;AAC3B,MAAI,MAAM;AACV,MAAI,UAAU;AACd,SAAO,YAAY,MAAM;AACvB,WAAO,QAAQ;AACf,cAAU,QAAQ;AAAA,EACpB;AACA,SAAO;AACT;AAEA,SAAS,uBAAuB,MAAM;AACpC,MAAI,SAAS;AAAM,WAAO;AAC1B,SAAO,KAAK,QAAQ,uBAAuB,KAAK,IAAI;AACtD;AAEA,SAAS,SAAS,MAAM,QAAQ;AAC9B,MAAI,UAAU;AACd,SAAO,YAAY,MAAM;AACvB,QAAI,QAAQ,UAAU;AAAQ,aAAO;AACrC,cAAU,QAAQ;AAAA,EACpB;AACA,SAAO;AACT;AAEA,SAAS,kBAAkB,MAAM,QAAQ;AACvC,MAAI,SAAS;AAAM,WAAO;AAC1B,MAAI,KAAK,UAAU;AAAQ,WAAO;AAClC,SAAO,kBAAkB,KAAK,MAAM,MAAM;AAC5C;AAEA,SAAS,sBAAsB,MAAM,OAAO;AAC1C,MAAI,SAAS;AAAM,WAAO;AAC1B,MAAI,UAAU;AAAG,WAAO,KAAK;AAC7B,SAAO,sBAAsB,KAAK,MAAM,QAAQ,CAAC;AACnD;AAEA,SAAS,aAAa,MAAM,OAAO;AACjC,MAAI,UAAU;AACd,MAAI,QAAQ;AACZ,SAAO,YAAY,MAAM;AACvB,QAAI,UAAU;AAAO,aAAO,QAAQ;AACpC,aAAS;AACT,cAAU,QAAQ;AAAA,EACpB;AACA,SAAO;AACT;AAEA,SAAS,kBAAkB,MAAM;AAC/B,MAAI,OAAO;AACX,MAAI,UAAU;AACd,SAAM,YAAY,MAAM;AAEtB,UAAM,OAAO,QAAQ;AAGrB,YAAQ,OAAO;AACf,WAAO;AACP,cAAU;AAAA,EACZ;AACA,SAAO;AACT;AAEA,SAAS,2BAA2B,MAAM,OAAO,MAAM;AACrD,MAAI,SAAS;AAAM,WAAO;AAC1B,QAAM,OAAO,KAAK;AAClB,OAAK,OAAO;AACZ,SAAO,2BAA2B,MAAM,IAAI;AAC9C;",
  "names": []
}
