{
  "version": 3,
  "sources": ["../singlyLinkedList.ts"],
  "sourcesContent": ["type NumOrString = string | number;\n\ntype NodeType = {\n  value: NumOrString,\n  next: NodeType| null\n}\n\nclass ListNode {\n  next: NodeType | null;\n  value: NumOrString;\n\n  constructor(value: NumOrString) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nclass SinglyLinkedList {\n  value: NumOrString;\n  head: ListNode | null;\n  tail: ListNode;\n  length: number;\n  \n  constructor(value: NumOrString) {\n    this.head = new ListNode(value);\n    this.tail = this.head;\n    this.length = 1;\n  }\n\n  append(value: NumOrString) {\n    let newNode = new ListNode(value)\n    this.tail.next = newNode;\n    // by updating tail, we also update the head\n    this.tail = newNode;\n    this.length++;\n  }\n\n  prepend(value: NumOrString) {\n    let newNode = new ListNode(value)\n    let head = this.head\n    newNode.next = head;\n    this.head = newNode;\n    this.length++;\n  }\n\n  traverseToIndex(index: number) {\n    let counter = 0;\n    let current = this.head;\n    while (counter !== index && current !== null) {\n      current = current.next;\n      counter++; \n    }\n    return current;\n  }\n\n  insert(value: NumOrString, index: number) {\n    let newNode = new ListNode(value)\n    let leadNode = this.traverseToIndex(index - 1);\n    if (leadNode) {\n      let followNode = leadNode.next;\n      leadNode.next = newNode;\n      newNode.next = followNode;\n      this.length++;\n    }\n  }\n\n  remove(index: number) {\n    if (index === 0 && this.head) {\n      this.head = this.head.next;\n      this.length --;\n      return this;\n    }\n    if (index >= this.length) {\n      const penultimateNode = this.traverseToIndex(this.length - 2);\n      if (penultimateNode) {\n        penultimateNode.next = null;\n        this.tail = penultimateNode;\n        this.length--;\n        return this;\n      }\n    }\n    let doomedNode = this.traverseToIndex(index);\n    let leadNode = this.traverseToIndex(index - 1);\n    if (leadNode && doomedNode) {\n      let followNode = doomedNode.next;\n      leadNode.next = followNode\n      this.length--;\n    }\n  }\n\n  sum() {\n    let sum = 0;\n    let current = this.head;\n    while(current !== null) {\n      if (typeof current.value === 'number') {\n        sum += current.value;\n        current = current.next;\n      }\n    }\n    console.log(sum);\n  }\n}\n\nconst linkedList = new SinglyLinkedList(23);\nlinkedList.append(6);\n// linkedList.append(69);\nlinkedList.prepend(10);\n// linkedList.prepend(576);\nlinkedList.insert('hello', 1)\nlinkedList.insert(35, 3)\nlinkedList.remove(9)\nlinkedList.sum();\n\n\nconsole.log(JSON.stringify(linkedList, null, 2))\n"],
  "mappings": ";AAOA,MAAM,SAAS;AAAA,EACb;AAAA,EACA;AAAA,EAEA,YAAY,OAAoB;AAC9B,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EACd;AACF;AAEA,MAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,OAAoB;AAC9B,SAAK,OAAO,IAAI,SAAS,KAAK;AAC9B,SAAK,OAAO,KAAK;AACjB,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,OAAO,OAAoB;AACzB,QAAI,UAAU,IAAI,SAAS,KAAK;AAChC,SAAK,KAAK,OAAO;AAEjB,SAAK,OAAO;AACZ,SAAK;AAAA,EACP;AAAA,EAEA,QAAQ,OAAoB;AAC1B,QAAI,UAAU,IAAI,SAAS,KAAK;AAChC,QAAI,OAAO,KAAK;AAChB,YAAQ,OAAO;AACf,SAAK,OAAO;AACZ,SAAK;AAAA,EACP;AAAA,EAEA,gBAAgB,OAAe;AAC7B,QAAI,UAAU;AACd,QAAI,UAAU,KAAK;AACnB,WAAO,YAAY,SAAS,YAAY,MAAM;AAC5C,gBAAU,QAAQ;AAClB;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,OAAoB,OAAe;AACxC,QAAI,UAAU,IAAI,SAAS,KAAK;AAChC,QAAI,WAAW,KAAK,gBAAgB,QAAQ,CAAC;AAC7C,QAAI,UAAU;AACZ,UAAI,aAAa,SAAS;AAC1B,eAAS,OAAO;AAChB,cAAQ,OAAO;AACf,WAAK;AAAA,IACP;AAAA,EACF;AAAA,EAEA,OAAO,OAAe;AACpB,QAAI,UAAU,KAAK,KAAK,MAAM;AAC5B,WAAK,OAAO,KAAK,KAAK;AACtB,WAAK;AACL,aAAO;AAAA,IACT;AACA,QAAI,SAAS,KAAK,QAAQ;AACxB,YAAM,kBAAkB,KAAK,gBAAgB,KAAK,SAAS,CAAC;AAC5D,UAAI,iBAAiB;AACnB,wBAAgB,OAAO;AACvB,aAAK,OAAO;AACZ,aAAK;AACL,eAAO;AAAA,MACT;AAAA,IACF;AACA,QAAI,aAAa,KAAK,gBAAgB,KAAK;AAC3C,QAAI,WAAW,KAAK,gBAAgB,QAAQ,CAAC;AAC7C,QAAI,YAAY,YAAY;AAC1B,UAAI,aAAa,WAAW;AAC5B,eAAS,OAAO;AAChB,WAAK;AAAA,IACP;AAAA,EACF;AAAA,EAEA,MAAM;AACJ,QAAI,MAAM;AACV,QAAI,UAAU,KAAK;AACnB,WAAM,YAAY,MAAM;AACtB,UAAI,OAAO,QAAQ,UAAU,UAAU;AACrC,eAAO,QAAQ;AACf,kBAAU,QAAQ;AAAA,MACpB;AAAA,IACF;AACA,YAAQ,IAAI,GAAG;AAAA,EACjB;AACF;AAEA,MAAM,aAAa,IAAI,iBAAiB,EAAE;AAC1C,WAAW,OAAO,CAAC;AAEnB,WAAW,QAAQ,EAAE;AAErB,WAAW,OAAO,SAAS,CAAC;AAC5B,WAAW,OAAO,IAAI,CAAC;AACvB,WAAW,OAAO,CAAC;AACnB,WAAW,IAAI;AAGf,QAAQ,IAAI,KAAK,UAAU,YAAY,MAAM,CAAC,CAAC;",
  "names": []
}
