{
  "version": 3,
  "sources": ["../singlyLinkedList.ts"],
  "sourcesContent": ["class Node {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nclass LinkedList {\n  constructor(value) {\n    this.head = new Node(value);\n    this.tail = this.head;\n    this.length = 1;\n  }\n  append(value) {\n    let newNode = new Node(value);\n    this.tail.next = newNode;\n    this.tail = newNode\n    this.length++;\n    return this;\n  }\n  prepend(value) {\n    let newHead = new Node(value);\n    newHead.next = this.head;\n    this.head = newHead;\n    this.length++;\n    return this;\n  }\n  insert(index, value) {\n    if (index >= this.length) {\n      return this.append(value)\n    }\n    const newNode = new Node(value)\n    const leader = this.traverseToIndex(index-1)\n    const holdingPointer = leader.next;\n    leader.next = newNode;\n    newNode.next = holdingPointer;\n    this.length++;\n  }\n  remove(index) {\n    if (index === 0) {\n      this.head = this.head.next;\n      this.length++;\n      return\n    }\n    if (index >= this.length) {\n      const newTail = this.traverseToIndex(this.length - 2);\n      newTail.next = null;\n      this.tail = newTail;\n      this.length--;\n      return;\n    }\n    const leader = this.traverseToIndex(index-1)\n    const holdingPointer = this.traverseToIndex(index+1);\n    leader.next = holdingPointer;\n    this.length--;\n  }\n  traverseToIndex(index) {\n    let counter = 0;\n    let currentNode = this.head;\n    while (counter !== index) {\n      currentNode = currentNode.next;\n      counter++;\n    }\n    return currentNode;\n  }\n  printList() {\n    const array = [];\n    let currentNode = this.head;\n    while (currentNode !== null) {\n      array.push(currentNode.value);\n      currentNode = currentNode.next;\n    }\n    return array;\n  }\n}\n\nconst myLinkedList = new LinkedList(24)\nmyLinkedList.append(42)\nmyLinkedList.append(73)\nmyLinkedList.prepend(84)\nmyLinkedList.prepend(56)\nmyLinkedList.insert(2, 45)\n\nconsole.log(JSON.stringify(myLinkedList, null, 2))\nconsole.log(myLinkedList.printList())\n\nmyLinkedList.remove(6)\nmyLinkedList.remove(1)\n\nconsole.log(JSON.stringify(myLinkedList, null, 2))\nconsole.log(myLinkedList.printList())"],
  "mappings": ";AAAA,MAAM,KAAK;AAAA,EACT,YAAY,OAAO;AACjB,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EACd;AACF;AAEA,MAAM,WAAW;AAAA,EACf,YAAY,OAAO;AACjB,SAAK,OAAO,IAAI,KAAK,KAAK;AAC1B,SAAK,OAAO,KAAK;AACjB,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,OAAO,OAAO;AACZ,QAAI,UAAU,IAAI,KAAK,KAAK;AAC5B,SAAK,KAAK,OAAO;AACjB,SAAK,OAAO;AACZ,SAAK;AACL,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,OAAO;AACb,QAAI,UAAU,IAAI,KAAK,KAAK;AAC5B,YAAQ,OAAO,KAAK;AACpB,SAAK,OAAO;AACZ,SAAK;AACL,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO,OAAO;AACnB,QAAI,SAAS,KAAK,QAAQ;AACxB,aAAO,KAAK,OAAO,KAAK;AAAA,IAC1B;AACA,UAAM,UAAU,IAAI,KAAK,KAAK;AAC9B,UAAM,SAAS,KAAK,gBAAgB,QAAM,CAAC;AAC3C,UAAM,iBAAiB,OAAO;AAC9B,WAAO,OAAO;AACd,YAAQ,OAAO;AACf,SAAK;AAAA,EACP;AAAA,EACA,OAAO,OAAO;AACZ,QAAI,UAAU,GAAG;AACf,WAAK,OAAO,KAAK,KAAK;AACtB,WAAK;AACL;AAAA,IACF;AACA,QAAI,SAAS,KAAK,QAAQ;AACxB,YAAM,UAAU,KAAK,gBAAgB,KAAK,SAAS,CAAC;AACpD,cAAQ,OAAO;AACf,WAAK,OAAO;AACZ,WAAK;AACL;AAAA,IACF;AACA,UAAM,SAAS,KAAK,gBAAgB,QAAM,CAAC;AAC3C,UAAM,iBAAiB,KAAK,gBAAgB,QAAM,CAAC;AACnD,WAAO,OAAO;AACd,SAAK;AAAA,EACP;AAAA,EACA,gBAAgB,OAAO;AACrB,QAAI,UAAU;AACd,QAAI,cAAc,KAAK;AACvB,WAAO,YAAY,OAAO;AACxB,oBAAc,YAAY;AAC1B;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,YAAY;AACV,UAAM,QAAQ,CAAC;AACf,QAAI,cAAc,KAAK;AACvB,WAAO,gBAAgB,MAAM;AAC3B,YAAM,KAAK,YAAY,KAAK;AAC5B,oBAAc,YAAY;AAAA,IAC5B;AACA,WAAO;AAAA,EACT;AACF;AAEA,MAAM,eAAe,IAAI,WAAW,EAAE;AACtC,aAAa,OAAO,EAAE;AACtB,aAAa,OAAO,EAAE;AACtB,aAAa,QAAQ,EAAE;AACvB,aAAa,QAAQ,EAAE;AACvB,aAAa,OAAO,GAAG,EAAE;AAEzB,QAAQ,IAAI,KAAK,UAAU,cAAc,MAAM,CAAC,CAAC;AACjD,QAAQ,IAAI,aAAa,UAAU,CAAC;AAEpC,aAAa,OAAO,CAAC;AACrB,aAAa,OAAO,CAAC;AAErB,QAAQ,IAAI,KAAK,UAAU,cAAc,MAAM,CAAC,CAAC;AACjD,QAAQ,IAAI,aAAa,UAAU,CAAC;",
  "names": []
}
