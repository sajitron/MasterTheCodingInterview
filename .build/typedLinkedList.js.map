{
  "version": 3,
  "sources": ["../typedLinkedList.ts"],
  "sourcesContent": ["type NodeType = {\n  value: number,\n  next: NodeType| null\n}\n\nclass ListNode {\n  next: NodeType | null;\n  value: number;\n\n  constructor(value: number) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nclass SinglyLinkedList {\n  value: number;\n  head: ListNode | null;\n  tail: ListNode | null;\n  length: number;\n  \n  constructor(value: number) {\n    this.head = new ListNode(value);\n    this.tail = this.head;\n    this.length = 1;\n  }\n\n  append(value: number) {\n    let newNode = new ListNode(value)\n    this.tail!.next = newNode;\n    // by updating tail, we also update the head\n    this.tail = newNode;\n    this.length++;\n  }\n\n  prepend(value: number) {\n    let newNode = new ListNode(value)\n    let head = this.head\n    newNode.next = head;\n    this.head = newNode;\n    this.length++;\n  }\n\n  traverseToIndex(index: number) {\n    let counter = 0;\n    let current = this.head;\n    while (counter !== index && current !== null) {\n      current = current.next;\n      counter++; \n    }\n    return current;\n  }\n\n  insert(value: number, index: number) {\n    let newNode = new ListNode(value)\n    let leadNode = this.traverseToIndex(index - 1);\n    if (leadNode) {\n      let followNode = leadNode.next;\n      leadNode.next = newNode;\n      newNode.next = followNode;\n      this.length++;\n    }\n  }\n\n  remove(index: number) {\n    if (index === 0 && this.head) {\n      this.head = this.head.next;\n      this.length --;\n      return this;\n    }\n    if (index >= this.length) {\n      const penultimateNode = this.traverseToIndex(this.length - 2);\n      if (penultimateNode) {\n        penultimateNode.next = null;\n        this.tail = penultimateNode;\n        this.length--;\n        return this;\n      }\n    }\n    let doomedNode = this.traverseToIndex(index);\n    let leadNode = this.traverseToIndex(index - 1);\n    if (leadNode && doomedNode) {\n      let followNode = doomedNode.next;\n      leadNode.next = followNode\n      this.length--;\n    }\n  }\n\n  sum() {\n    let sum = 0;\n    let current = this.head;\n    while(current !== null) {\n      sum += current.value;\n      current = current.next;\n    }\n    return sum;\n  }\n\n  reverse() {\n    let current = this.head;\n    let prev: ListNode | null = null;\n    while (current !== null) {\n      const next = current.next;\n      current.next = prev;\n      prev = current;\n      current = next;\n    }\n    let newTail = this.head;\n    this.head = this.tail;\n    this.tail = newTail;\n  }\n\n  printListValues(): number[] {\n    let values: number[] = [];\n    let current = this.head;\n    while (current !== null) {\n      values.push(current.value);\n      current = current.next;\n    }\n    return values;\n  }\n}"],
  "mappings": ";AAKA,MAAM,SAAS;AAAA,EACb;AAAA,EACA;AAAA,EAEA,YAAY,OAAe;AACzB,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EACd;AACF;AAEA,MAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,OAAe;AACzB,SAAK,OAAO,IAAI,SAAS,KAAK;AAC9B,SAAK,OAAO,KAAK;AACjB,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,OAAO,OAAe;AACpB,QAAI,UAAU,IAAI,SAAS,KAAK;AAChC,SAAK,KAAM,OAAO;AAElB,SAAK,OAAO;AACZ,SAAK;AAAA,EACP;AAAA,EAEA,QAAQ,OAAe;AACrB,QAAI,UAAU,IAAI,SAAS,KAAK;AAChC,QAAI,OAAO,KAAK;AAChB,YAAQ,OAAO;AACf,SAAK,OAAO;AACZ,SAAK;AAAA,EACP;AAAA,EAEA,gBAAgB,OAAe;AAC7B,QAAI,UAAU;AACd,QAAI,UAAU,KAAK;AACnB,WAAO,YAAY,SAAS,YAAY,MAAM;AAC5C,gBAAU,QAAQ;AAClB;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EAEA,OAAO,OAAe,OAAe;AACnC,QAAI,UAAU,IAAI,SAAS,KAAK;AAChC,QAAI,WAAW,KAAK,gBAAgB,QAAQ,CAAC;AAC7C,QAAI,UAAU;AACZ,UAAI,aAAa,SAAS;AAC1B,eAAS,OAAO;AAChB,cAAQ,OAAO;AACf,WAAK;AAAA,IACP;AAAA,EACF;AAAA,EAEA,OAAO,OAAe;AACpB,QAAI,UAAU,KAAK,KAAK,MAAM;AAC5B,WAAK,OAAO,KAAK,KAAK;AACtB,WAAK;AACL,aAAO;AAAA,IACT;AACA,QAAI,SAAS,KAAK,QAAQ;AACxB,YAAM,kBAAkB,KAAK,gBAAgB,KAAK,SAAS,CAAC;AAC5D,UAAI,iBAAiB;AACnB,wBAAgB,OAAO;AACvB,aAAK,OAAO;AACZ,aAAK;AACL,eAAO;AAAA,MACT;AAAA,IACF;AACA,QAAI,aAAa,KAAK,gBAAgB,KAAK;AAC3C,QAAI,WAAW,KAAK,gBAAgB,QAAQ,CAAC;AAC7C,QAAI,YAAY,YAAY;AAC1B,UAAI,aAAa,WAAW;AAC5B,eAAS,OAAO;AAChB,WAAK;AAAA,IACP;AAAA,EACF;AAAA,EAEA,MAAM;AACJ,QAAI,MAAM;AACV,QAAI,UAAU,KAAK;AACnB,WAAM,YAAY,MAAM;AACtB,aAAO,QAAQ;AACf,gBAAU,QAAQ;AAAA,IACpB;AACA,WAAO;AAAA,EACT;AAAA,EAEA,UAAU;AACR,QAAI,UAAU,KAAK;AACnB,QAAI,OAAwB;AAC5B,WAAO,YAAY,MAAM;AACvB,YAAM,OAAO,QAAQ;AACrB,cAAQ,OAAO;AACf,aAAO;AACP,gBAAU;AAAA,IACZ;AACA,QAAI,UAAU,KAAK;AACnB,SAAK,OAAO,KAAK;AACjB,SAAK,OAAO;AAAA,EACd;AAAA,EAEA,kBAA4B;AAC1B,QAAI,SAAmB,CAAC;AACxB,QAAI,UAAU,KAAK;AACnB,WAAO,YAAY,MAAM;AACvB,aAAO,KAAK,QAAQ,KAAK;AACzB,gBAAU,QAAQ;AAAA,IACpB;AACA,WAAO;AAAA,EACT;AACF;",
  "names": []
}
